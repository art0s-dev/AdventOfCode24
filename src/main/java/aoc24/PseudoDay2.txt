isSave(List<Integer> level){

	isEiterIncreasingOrDecreasing(List<Integer> list, index = 0) -> Boolean{
		boolean isIncOrDec = list.get(index) > list.get(index + 1)
			|| list.get(index) > list.get(index + 1);
		
		if(!isIncOrDec)
			return false;
		
		if(index > list.length())
			return true
		
		isEiterIncreasingOrDecreasing(list, index + 1);
	}
	
	followsMaximumDiffRule(List<Integer> list, index = 0) -> Boolean{
		int current = list.get(index)
		int next = list.get(index +1)
		
		boolean followsMaximumDiff =  max(current, next) < 3
			
		if(!followsMaximumDiff)
			return false;
			
		if(index > list.length())
			return true
			
		followsMaximumDiffRule(list, index + 1);
	}

	return isEitherIncreaseingOrDecreasing(level)
		&& followsTheMaximumDiffRule(level)
}


List<List<Integer>> levellist = List.of(
	List.of(7 6 4 2 1),
	List.of(1 2 7 8 9)
);

int saveLevels = levellist.map(level -> isSave(level))
	.toList()
	.sum()
